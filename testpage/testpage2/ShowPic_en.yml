ShowPic:
  init:
    - actionType: evalObject 
      object: 
        .Global._nonce@: 
          =.builtIn.math.random: "" #重构随机数,清除缓存
    - ..avatar.docAPI.get
    - if: #if表达式，如果第一行为true执行第二条语句，否则执行第三条语句
      - =..avatar.docResponse.doc.0 #判断有没有get到数据
      - actionType: evalObject 
        object:
          - ..avatar.document@: =..avatar.docResponse.doc.0 #将获取数据中的document格式那部分赋值给document
          - =.builtIn.utils.prepareDoc: #document改造函数，可以理解成用于将document转换成能显示图片的那种document
              dataIn: #函数传入参数，当前函数只有一个doc参数
                doc: =..avatar.document #需要转换的document
              dataOut: ShowPic.avatar.document #转换过后的document
          - ..avatar.url@: =..avatar.document.name.data   #将转换过后的document中的data赋值给avatar的url,即最终图片显示的路径
      - continue #不进行任何操作
  avatar: #头像数据类
    url: drImg.png #头像图片对应的url，当前默认设为drImg.png
    document: 
      .Document: "" #继承自BaseDataModel_en.yml中的document基类，用于设定一些基础属性
      subtype: #子类型，用于设定一些属性
        isEncrypted: "1" #加密
        isOnServer: "0" #是否存储于服务器
      type: .DocType.UserAvatar #头像数据类对应的类型值，可从BaseDataModel_en,yml中查看
      name: #用于存储document中的一些用户数据，比如图片
        title: "" 
        type: ..avatar.docAPI.store.subtype.mediaType #上传文件的类型
        data: binFile #将文件以二进制形式存储于data
      deat:
        sig: ""
        url: ""     
      eid: .Global.rootNotebookID #document所在根边的id
    docResponse: #用于接收get回来的数据
      doc:
        - type: .DocType.UserAvatar
          eid: .Global.rootNotebookID
          name: ""
      error: ""
      jwt: ""
    docAPI: #头像数据类所属的一些操作
      store: #存储操作
        api: cd #create document，表明操作类型
        dataKey: avatar.document #要存储到后端的数据
        subtype:
          mediaType: "" #为空表示自动适配
      get: #get操作
        .DocAPI.get: "" #继承基类的一些属性 
        id: .Global.rootNotebookID #要获取document对应的id值
        xfname: eid #上述id的具体类型，是eid,bvid,evid还是其他的等等
        type: .DocType.UserAvatar
        dataKey: avatar.docResponse #将get的数据放到docResponse
        _nonce: .Global._nonce #清除缓存
        maxcount: "1" #get回记录的最大值
        obfname: "mtime" #按照哪种字段排序，这里针对修改时间
  components: 
    - type: image
      path: ..avatar.url
      style:
        left: "0.1"
        top: "0.2"
        width: "0.8"
    - type: button
      text: Done
      onClick: 
        - actionType: builtIn
          funcName: goBack
        - actionType: evalObject 
          object: 
            .Global._nonce@: 
              =.builtIn.math.random: "" #重构随机数,清除缓存
      style: 
        left: "0.133"
        top: "0.8"
        width: "0.72"
        height: "0.06"
        backgroundColor: "0x388eccff"
        borderRadius: "3"
        color: "0xffffffff"
        border: 
          style: "3"
        borderColor: "0x388eccff"
        textAlign:
          x: center