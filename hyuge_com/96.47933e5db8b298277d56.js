"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[96],{78096:(e,n,t)=>{t.r(n),t.d(n,{clearInstance:()=>v,createInstance:()=>h,default:()=>A,getConfigEndpoint:()=>g,getInstance:()=>y,lvl3Options:()=>w,noodl:()=>C,resetInstance:()=>O});var i,o,r=t(32209),l=t(57631),a=t(88604),c=Object.defineProperty,u=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,d=(e,n,t)=>n in e?c(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,f=(e,n)=>{for(var t in n||(n={}))p.call(n,t)&&d(e,t,n[t]);if(u)for(var t of u(n))s.call(n,t)&&d(e,t,n[t]);return e};const w={baseConfigUrl:"https://public.aitmed.com/config",app:null!=(o=null!=(i={NODE_ENV:"production"}.ANALYSIS_APP)?i:{NODE_ENV:"production"}.DEBUG_APP)?o:"patient",get url(){return"./local.yml"}},b=!1;g(w.app);function g(e){let n="";return b&&(n=`/${e}.yml`),w.baseConfigUrl+n}let C;function v(){C=null}function y(e){return new r.CADL(f({apiCacheConfig:window.__NOODL_API_CACHE__,cadlVersion:(0,a.isStable)()?"stable":"test",configUrl:w.url,dbConfig:void 0},e))}function O(){return C=y({aspectRatio:"undefined"!=typeof window?l.Viewport.getAspectRatio(window.innerWidth,window.innerHeight):1}),C}function h(e){return C&&!(null==e?void 0:e.overwrite)||(C=new r.CADL(f({aspectRatio:"undefined"!=typeof window?l.Viewport.getAspectRatio(window.innerWidth,window.innerHeight):1,cadlVersion:(null==e?void 0:e.env)||(0,a.isStable)()?"stable":"test",configUrl:w.url,dbConfig:void 0},e))),C}O();const A=C}}]);